rm(list = ls())

library(CausalAI)
library(Congo.vs.Amazon)
library(ED2scenarios)
library(dplyr)
library(purrr)
library(raster)
library(ggplot2)
library(ggthemes)

###############################################################
# Settings

Nrun.max.per.job <- 100

models <- c("CABLE-POP","CLASSIC","CLM6.0",
            "E3SM","JSBACH","JULES","LPJ-GUESS",
            "LPJmL","LPX-Bern","VISIT")

main.config <- list(lags = 6,
                    initial = 240,
                    horizon = 3,
                    global.suffix = "DGVM",
                    step = 12,
                    skip = 11,
                    fac.CC = 86400*365,
                    threshold = 0.02,
                    climate.location = "/data/gent/vo/000/gvo00074/felicien/R/outputs/CRUJRA/anomaly.",
                    raster.grid = raster(extent(-179.75, 179.75,
                                                -23.25, 23.25),
                                         res = 1,
                                         crs = "+proj=longlat +datum=WGS84"),
                    x_var = c("tmp","tmin","tmax",
                              "dswrf","vpd","co2anomaly",
                              "pre","top.sml"),
                    y_var = "gppanomaly",
                    
                    year.min = 1980,
                    year.max = 2050,
                    
                    Grid = tidyr::crossing(
                      eta_nrounds <- data.frame(
                        eta     = c(0.10, 0.05, 0.03),
                        nrounds = c( 400,   800,  1200)
                      ),
                      max_depth        = c(2, 4, 6),     # keep trees fairly shallow for stability
                      min_child_weight = c(1, 3, 5),     # stronger regularization options
                      gamma            = c(0),        # penalize splits a bit in some configs
                      subsample        = c(0.7),    # row subsampling
                      colsample_bytree = c(0.7)),     # feature subsampling
                    
                    time2save = 600)

raster.grid <- main.config[["raster.grid"]]

land.frac <- rasterFromXYZ(readRDS("./outputs/landFrac.RDS"))
land.frac.rspld <- raster::resample(land.frac,raster.grid)
df.lon.lat <- as.data.frame(land.frac.rspld,xy = TRUE) %>%
  rename(lon = x, lat = y) %>%
  filter(value > 0.25) %>%
  filter(abs(lat) < 25) %>%
  mutate(lon_lat = paste0(lon,"_",lat)) %>%
  ungroup() %>%
  mutate(id = 1:n())

world <- rnaturalearth::ne_countries(scale = "medium", returnclass = "sf")

ggplot(data = df.lon.lat) +
  geom_raster(aes(x = lon, y = lat,
                  fill = value)) +
  geom_sf(data = world,fill = NA, color = "grey17") +
  scale_y_continuous(limits = c(-1,1)*23.5) +
  theme_map()

all.lons_lats <- df.lon.lat$lon_lat
Ntot.run <- length(all.lons_lats)

dir.name <- "/kyukon/data/gent/vo/000/gvo00074/felicien/R/outputs/Granger/"
dir.create(dir.name,showWarnings = FALSE)

mainconfig.file <- file.path(dir.name,
                             paste0("main.config.",main.config[["global.suffix"]],".RDS"))

saveRDS(main.config,
        mainconfig.file)

list_dir <- list() ; job.names <- c()

for (cmodel in models){
  
  print(paste0(cmodel))
  
  dir.create(file.path(dir.name,cmodel),showWarnings = FALSE)
  
  model.config <- main.config
  model.config[["SWC.location"]] <- paste0("/data/gent/vo/000/gvo00074/felicien/R/outputs/DGVM/",cmodel,"/top.sml.",cmodel)
  model.config[["CC.location"]] <- paste0("/data/gent/vo/000/gvo00074/felicien/R/outputs/DGVM/",cmodel,"/",main.config[["y_var"]],".",cmodel)
  model.config[["dest.dir"]] <- file.path(dir.name,cmodel)
  model.config[["name"]] <- cmodel
  
  
  modelconfig.file <- file.path(dir.name,cmodel,
                                paste0("config.",cmodel,".RDS"))
  
  saveRDS(model.config,
          modelconfig.file)
  
  compt <- 1
  for (istart in seq(1,Ntot.run,Nrun.max.per.job)){
    lons_lats <- df.lon.lat %>%
      filter(id %in% c(istart:(istart + Nrun.max.per.job -1))) %>%
      pull(lon_lat)
    
    location.file <- file.path(file.path(dir.name, cmodel),
                               paste0("location.",compt,".RDS"))
    saveRDS(lons_lats,
            location.file)
    
    suffix <- paste0(cmodel,"_",main.config[["y_var"]],"_",compt)
    
    write.Granger.script(dir.name = file.path(dir.name, cmodel),
                         file.name = paste0("Rscript_",suffix,".R"),
                         config.location = modelconfig.file,
                         coord.location = location.file,
                         cmodel,
                         suffix = suffix)
    
    cjobname <- paste0("job_",suffix,".pbs")
    ED2scenarios::write_jobR(file = file.path(dir.name,cmodel,cjobname),
                             nodes = 1,ppn = 16,mem = 100,walltime = 12,
                             prerun = "ml purge ; ml R-bundle-Bioconductor/3.20-foss-2024a-R-4.4.2",
                             CD = file.path(dir.name,cmodel),
                             Rscript = paste0("Rscript_",suffix,".R"))
    job.names <- c(job.names,cjobname)
    list_dir[[suffix]] = file.path(dir.name,cmodel)
    
    compt <- compt + 1
    
  }
}

dumb <- write_bash_submission(file = file.path(getwd(),
                                               "All.Granger.sh"),
                              list_files = list_dir,
                              job_name = job.names)

# scp /home/femeunier/Documents/projects/CausalAI/scripts/Granger.grid.R hpc:/kyukon/data/gent/vo/000/gvo00074/felicien/R/
